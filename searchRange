class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] a = { -1, -1 };
		if (nums == null || nums.length == 0) {
			return a;
		}
		int index = binarySearch(nums, target);
		if (index == -1) {
			return a;
		}
		int l = index - 1;
		while (l >= 0 && nums[l] == target) {
			--l;
		}
		a[0] = l + 1;
		int r = index + 1;
		while (r < nums.length && nums[r] == target) {
			++r;
		}
		a[1] = r - 1;
 
		return a;
    }
     public  int binarySearch(int[] nums, int target) {
		if (nums == null || nums.length == 0) {
			return -1;
		}
		int l = 0;
		int r = nums.length - 1;
		while (l <= r) {
			int middle = (l + r) / 2;
			if (nums[middle] == target) {
				return middle;
			} else if (nums[middle] > target) {
				r = middle - 1;
			} else {
				l = middle + 1;
			}
		}
		return -1;
	}
}
